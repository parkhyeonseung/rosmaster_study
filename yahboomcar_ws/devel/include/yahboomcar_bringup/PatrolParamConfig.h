//#line 2 "/opt/ros/melodic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"
// *********************************************************
//
// File autogenerated for the yahboomcar_bringup package
// by the dynamic_reconfigure package.
// Please do not edit.
//
// ********************************************************/

#ifndef __yahboomcar_bringup__PATROLPARAMCONFIG_H__
#define __yahboomcar_bringup__PATROLPARAMCONFIG_H__

#if __cplusplus >= 201103L
#define DYNAMIC_RECONFIGURE_FINAL final
#else
#define DYNAMIC_RECONFIGURE_FINAL
#endif

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace yahboomcar_bringup
{
  class PatrolParamConfigStatics;

  class PatrolParamConfig
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l,
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }

      virtual void clamp(PatrolParamConfig &config, const PatrolParamConfig &max, const PatrolParamConfig &min) const = 0;
      virtual void calcLevel(uint32_t &level, const PatrolParamConfig &config1, const PatrolParamConfig &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, PatrolParamConfig &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const PatrolParamConfig &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, PatrolParamConfig &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const PatrolParamConfig &config) const = 0;
      virtual void getValue(const PatrolParamConfig &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template <class T>
    class ParamDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string a_name, std::string a_type, uint32_t a_level,
          std::string a_description, std::string a_edit_method, T PatrolParamConfig::* a_f) :
        AbstractParamDescription(a_name, a_type, a_level, a_description, a_edit_method),
        field(a_f)
      {}

      T PatrolParamConfig::* field;

      virtual void clamp(PatrolParamConfig &config, const PatrolParamConfig &max, const PatrolParamConfig &min) const
      {
        if (config.*field > max.*field)
          config.*field = max.*field;

        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const PatrolParamConfig &config1, const PatrolParamConfig &config2) const
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, PatrolParamConfig &config) const
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const PatrolParamConfig &config) const
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, PatrolParamConfig &config) const
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const PatrolParamConfig &config) const
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const PatrolParamConfig &config, boost::any &val) const
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, PatrolParamConfig &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); ++i)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template<class T, class PT>
    class GroupDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string a_name, std::string a_type, int a_parent, int a_id, bool a_s, T PT::* a_f) : AbstractGroupDescription(a_name, a_type, a_parent, a_id, a_s), field(a_f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }

      virtual void updateParams(boost::any &cfg, PatrolParamConfig &top) const
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T PT::* field;
      std::vector<PatrolParamConfig::AbstractGroupDescriptionConstPtr> groups;
    };

class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(PatrolParamConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("SetLoop"==(*_i)->name){SetLoop = boost::any_cast<bool>(val);}
        if("Linear"==(*_i)->name){Linear = boost::any_cast<double>(val);}
        if("Angular"==(*_i)->name){Angular = boost::any_cast<double>(val);}
        if("Length"==(*_i)->name){Length = boost::any_cast<double>(val);}
        if("Angle"==(*_i)->name){Angle = boost::any_cast<double>(val);}
        if("LineScaling"==(*_i)->name){LineScaling = boost::any_cast<double>(val);}
        if("RotationScaling"==(*_i)->name){RotationScaling = boost::any_cast<double>(val);}
        if("LineTolerance"==(*_i)->name){LineTolerance = boost::any_cast<double>(val);}
        if("RotationTolerance"==(*_i)->name){RotationTolerance = boost::any_cast<double>(val);}
        if("ResponseDist"==(*_i)->name){ResponseDist = boost::any_cast<double>(val);}
        if("LaserAngle"==(*_i)->name){LaserAngle = boost::any_cast<int>(val);}
        if("Command"==(*_i)->name){Command = boost::any_cast<int>(val);}
        if("Switch"==(*_i)->name){Switch = boost::any_cast<bool>(val);}
      }
    }

    bool SetLoop;
double Linear;
double Angular;
double Length;
double Angle;
double LineScaling;
double RotationScaling;
double LineTolerance;
double RotationTolerance;
double ResponseDist;
int LaserAngle;
int Command;
bool Switch;

    bool state;
    std::string name;

    
}groups;



//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool SetLoop;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double Linear;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double Angular;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double Length;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double Angle;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double LineScaling;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double RotationScaling;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double LineTolerance;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double RotationTolerance;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double ResponseDist;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int LaserAngle;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int Command;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool Switch;
//#line 228 "/opt/ros/melodic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("PatrolParamConfig::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }

    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }

    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const PatrolParamConfig &__max__ = __getMax__();
      const PatrolParamConfig &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const PatrolParamConfig &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->calcLevel(level, config, *this);
      return level;
    }

    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const PatrolParamConfig &__getDefault__();
    static const PatrolParamConfig &__getMax__();
    static const PatrolParamConfig &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();

  private:
    static const PatrolParamConfigStatics *__get_statics__();
  };

  template <> // Max and min are ignored for strings.
  inline void PatrolParamConfig::ParamDescription<std::string>::clamp(PatrolParamConfig &config, const PatrolParamConfig &max, const PatrolParamConfig &min) const
  {
    (void) config;
    (void) min;
    (void) max;
    return;
  }

  class PatrolParamConfigStatics
  {
    friend class PatrolParamConfig;

    PatrolParamConfigStatics()
    {
PatrolParamConfig::GroupDescription<PatrolParamConfig::DEFAULT, PatrolParamConfig> Default("Default", "", 0, 0, true, &PatrolParamConfig::groups);
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.SetLoop = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.SetLoop = 1;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.SetLoop = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(PatrolParamConfig::AbstractParamDescriptionConstPtr(new PatrolParamConfig::ParamDescription<bool>("SetLoop", "bool", 0, "SetLoop", "", &PatrolParamConfig::SetLoop)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(PatrolParamConfig::AbstractParamDescriptionConstPtr(new PatrolParamConfig::ParamDescription<bool>("SetLoop", "bool", 0, "SetLoop", "", &PatrolParamConfig::SetLoop)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.Linear = 0.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.Linear = 1.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.Linear = 0.5;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(PatrolParamConfig::AbstractParamDescriptionConstPtr(new PatrolParamConfig::ParamDescription<double>("Linear", "double", 0, "Linear in robot", "", &PatrolParamConfig::Linear)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(PatrolParamConfig::AbstractParamDescriptionConstPtr(new PatrolParamConfig::ParamDescription<double>("Linear", "double", 0, "Linear in robot", "", &PatrolParamConfig::Linear)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.Angular = 0.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.Angular = 5.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.Angular = 1.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(PatrolParamConfig::AbstractParamDescriptionConstPtr(new PatrolParamConfig::ParamDescription<double>("Angular", "double", 0, "Angular in robot", "", &PatrolParamConfig::Angular)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(PatrolParamConfig::AbstractParamDescriptionConstPtr(new PatrolParamConfig::ParamDescription<double>("Angular", "double", 0, "Angular in robot", "", &PatrolParamConfig::Angular)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.Length = 0.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.Length = 2.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.Length = 1.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(PatrolParamConfig::AbstractParamDescriptionConstPtr(new PatrolParamConfig::ParamDescription<double>("Length", "double", 0, "Length in limit", "", &PatrolParamConfig::Length)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(PatrolParamConfig::AbstractParamDescriptionConstPtr(new PatrolParamConfig::ParamDescription<double>("Length", "double", 0, "Length in limit", "", &PatrolParamConfig::Length)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.Angle = 0.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.Angle = 360.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.Angle = 360.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(PatrolParamConfig::AbstractParamDescriptionConstPtr(new PatrolParamConfig::ParamDescription<double>("Angle", "double", 0, "Angle in limit", "", &PatrolParamConfig::Angle)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(PatrolParamConfig::AbstractParamDescriptionConstPtr(new PatrolParamConfig::ParamDescription<double>("Angle", "double", 0, "Angle in limit", "", &PatrolParamConfig::Angle)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.LineScaling = 0.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.LineScaling = 2.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.LineScaling = 1.1;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(PatrolParamConfig::AbstractParamDescriptionConstPtr(new PatrolParamConfig::ParamDescription<double>("LineScaling", "double", 0, "Line Scaling", "", &PatrolParamConfig::LineScaling)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(PatrolParamConfig::AbstractParamDescriptionConstPtr(new PatrolParamConfig::ParamDescription<double>("LineScaling", "double", 0, "Line Scaling", "", &PatrolParamConfig::LineScaling)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.RotationScaling = 0.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.RotationScaling = 2.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.RotationScaling = 0.75;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(PatrolParamConfig::AbstractParamDescriptionConstPtr(new PatrolParamConfig::ParamDescription<double>("RotationScaling", "double", 0, "Rotation Scaling", "", &PatrolParamConfig::RotationScaling)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(PatrolParamConfig::AbstractParamDescriptionConstPtr(new PatrolParamConfig::ParamDescription<double>("RotationScaling", "double", 0, "Rotation Scaling", "", &PatrolParamConfig::RotationScaling)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.LineTolerance = 0.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.LineTolerance = 3.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.LineTolerance = 0.1;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(PatrolParamConfig::AbstractParamDescriptionConstPtr(new PatrolParamConfig::ParamDescription<double>("LineTolerance", "double", 0, "Line Tolerance", "", &PatrolParamConfig::LineTolerance)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(PatrolParamConfig::AbstractParamDescriptionConstPtr(new PatrolParamConfig::ParamDescription<double>("LineTolerance", "double", 0, "Line Tolerance", "", &PatrolParamConfig::LineTolerance)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.RotationTolerance = 0.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.RotationTolerance = 5.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.RotationTolerance = 0.3;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(PatrolParamConfig::AbstractParamDescriptionConstPtr(new PatrolParamConfig::ParamDescription<double>("RotationTolerance", "double", 0, "Rotation Tolerance", "", &PatrolParamConfig::RotationTolerance)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(PatrolParamConfig::AbstractParamDescriptionConstPtr(new PatrolParamConfig::ParamDescription<double>("RotationTolerance", "double", 0, "Rotation Tolerance", "", &PatrolParamConfig::RotationTolerance)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.ResponseDist = 0.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.ResponseDist = 8.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.ResponseDist = 0.6;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(PatrolParamConfig::AbstractParamDescriptionConstPtr(new PatrolParamConfig::ParamDescription<double>("ResponseDist", "double", 0, "ResponseDist in limit", "", &PatrolParamConfig::ResponseDist)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(PatrolParamConfig::AbstractParamDescriptionConstPtr(new PatrolParamConfig::ParamDescription<double>("ResponseDist", "double", 0, "ResponseDist in limit", "", &PatrolParamConfig::ResponseDist)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.LaserAngle = 10;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.LaserAngle = 180;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.LaserAngle = 30;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(PatrolParamConfig::AbstractParamDescriptionConstPtr(new PatrolParamConfig::ParamDescription<int>("LaserAngle", "int", 0, "LaserAngle in limit", "", &PatrolParamConfig::LaserAngle)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(PatrolParamConfig::AbstractParamDescriptionConstPtr(new PatrolParamConfig::ParamDescription<int>("LaserAngle", "int", 0, "LaserAngle in limit", "", &PatrolParamConfig::LaserAngle)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.Command = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.Command = 5;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.Command = 3;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(PatrolParamConfig::AbstractParamDescriptionConstPtr(new PatrolParamConfig::ParamDescription<int>("Command", "int", 0, "A size parameter which is edited via an enum", "{'enum_description': 'An enum to set size', 'enum': [{'srcline': 18, 'description': 'first data', 'srcfile': '/home/jetson/yahboomcar_ws/src/yahboomcar_bringup/cfg/PatrolParam.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'LengthTest'}, {'srcline': 19, 'description': 'two data', 'srcfile': '/home/jetson/yahboomcar_ws/src/yahboomcar_bringup/cfg/PatrolParam.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'AngleTest'}, {'srcline': 20, 'description': 'three datat', 'srcfile': '/home/jetson/yahboomcar_ws/src/yahboomcar_bringup/cfg/PatrolParam.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Triangle'}, {'srcline': 21, 'description': 'four data', 'srcfile': '/home/jetson/yahboomcar_ws/src/yahboomcar_bringup/cfg/PatrolParam.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Square'}, {'srcline': 22, 'description': 'five data', 'srcfile': '/home/jetson/yahboomcar_ws/src/yahboomcar_bringup/cfg/PatrolParam.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'Circle'}, {'srcline': 23, 'description': 'six data', 'srcfile': '/home/jetson/yahboomcar_ws/src/yahboomcar_bringup/cfg/PatrolParam.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': 'Parallelogram'}]}", &PatrolParamConfig::Command)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(PatrolParamConfig::AbstractParamDescriptionConstPtr(new PatrolParamConfig::ParamDescription<int>("Command", "int", 0, "A size parameter which is edited via an enum", "{'enum_description': 'An enum to set size', 'enum': [{'srcline': 18, 'description': 'first data', 'srcfile': '/home/jetson/yahboomcar_ws/src/yahboomcar_bringup/cfg/PatrolParam.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'LengthTest'}, {'srcline': 19, 'description': 'two data', 'srcfile': '/home/jetson/yahboomcar_ws/src/yahboomcar_bringup/cfg/PatrolParam.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'AngleTest'}, {'srcline': 20, 'description': 'three datat', 'srcfile': '/home/jetson/yahboomcar_ws/src/yahboomcar_bringup/cfg/PatrolParam.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Triangle'}, {'srcline': 21, 'description': 'four data', 'srcfile': '/home/jetson/yahboomcar_ws/src/yahboomcar_bringup/cfg/PatrolParam.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Square'}, {'srcline': 22, 'description': 'five data', 'srcfile': '/home/jetson/yahboomcar_ws/src/yahboomcar_bringup/cfg/PatrolParam.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'Circle'}, {'srcline': 23, 'description': 'six data', 'srcfile': '/home/jetson/yahboomcar_ws/src/yahboomcar_bringup/cfg/PatrolParam.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': 'Parallelogram'}]}", &PatrolParamConfig::Command)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.Switch = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.Switch = 1;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.Switch = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(PatrolParamConfig::AbstractParamDescriptionConstPtr(new PatrolParamConfig::ParamDescription<bool>("Switch", "bool", 0, "Switch in robot", "", &PatrolParamConfig::Switch)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(PatrolParamConfig::AbstractParamDescriptionConstPtr(new PatrolParamConfig::ParamDescription<bool>("Switch", "bool", 0, "Switch in robot", "", &PatrolParamConfig::Switch)));
//#line 246 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.convertParams();
//#line 246 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(PatrolParamConfig::AbstractGroupDescriptionConstPtr(new PatrolParamConfig::GroupDescription<PatrolParamConfig::DEFAULT, PatrolParamConfig>(Default)));
//#line 366 "/opt/ros/melodic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

      for (std::vector<PatrolParamConfig::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__);
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__);
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__);
    }
    std::vector<PatrolParamConfig::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<PatrolParamConfig::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    PatrolParamConfig __max__;
    PatrolParamConfig __min__;
    PatrolParamConfig __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const PatrolParamConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static PatrolParamConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &PatrolParamConfig::__getDescriptionMessage__()
  {
    return __get_statics__()->__description_message__;
  }

  inline const PatrolParamConfig &PatrolParamConfig::__getDefault__()
  {
    return __get_statics__()->__default__;
  }

  inline const PatrolParamConfig &PatrolParamConfig::__getMax__()
  {
    return __get_statics__()->__max__;
  }

  inline const PatrolParamConfig &PatrolParamConfig::__getMin__()
  {
    return __get_statics__()->__min__;
  }

  inline const std::vector<PatrolParamConfig::AbstractParamDescriptionConstPtr> &PatrolParamConfig::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<PatrolParamConfig::AbstractGroupDescriptionConstPtr> &PatrolParamConfig::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const PatrolParamConfigStatics *PatrolParamConfig::__get_statics__()
  {
    const static PatrolParamConfigStatics *statics;

    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = PatrolParamConfigStatics::get_instance();

    return statics;
  }

//#line 18 "/home/jetson/yahboomcar_ws/src/yahboomcar_bringup/cfg/PatrolParam.cfg"
      const int PatrolParam_LengthTest = 0;
//#line 19 "/home/jetson/yahboomcar_ws/src/yahboomcar_bringup/cfg/PatrolParam.cfg"
      const int PatrolParam_AngleTest = 1;
//#line 20 "/home/jetson/yahboomcar_ws/src/yahboomcar_bringup/cfg/PatrolParam.cfg"
      const int PatrolParam_Triangle = 2;
//#line 21 "/home/jetson/yahboomcar_ws/src/yahboomcar_bringup/cfg/PatrolParam.cfg"
      const int PatrolParam_Square = 3;
//#line 22 "/home/jetson/yahboomcar_ws/src/yahboomcar_bringup/cfg/PatrolParam.cfg"
      const int PatrolParam_Circle = 4;
//#line 23 "/home/jetson/yahboomcar_ws/src/yahboomcar_bringup/cfg/PatrolParam.cfg"
      const int PatrolParam_Parallelogram = 5;
}

#undef DYNAMIC_RECONFIGURE_FINAL

#endif // __PATROLPARAMRECONFIGURATOR_H__
